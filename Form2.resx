<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>